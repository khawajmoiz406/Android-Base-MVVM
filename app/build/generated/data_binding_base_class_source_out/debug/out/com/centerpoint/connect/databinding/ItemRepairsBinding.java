// Generated by data binding compiler. Do not edit!
package com.centerpoint.connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.centerpoint.connect.R;
import com.centerpoint.connect.base.listeners.BaseAdapterListener;
import com.centerpoint.connect.models.response.repair.Repair;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemRepairsBinding extends ViewDataBinding {
  @NonNull
  public final IncludeHeadingValueViewBinding includeNo;

  @NonNull
  public final IncludeHeadingValueViewBinding includeProblem;

  @NonNull
  public final IncludeHeadingValueViewBinding includeRepairs;

  @NonNull
  public final IncludeHeadingValueViewBinding includeResolution;

  @NonNull
  public final IncludeHeadingValueViewBinding includeSection;

  @Bindable
  protected Repair mData;

  @Bindable
  protected Integer mItemCount;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected BaseAdapterListener mListeners;

  protected ItemRepairsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      IncludeHeadingValueViewBinding includeNo, IncludeHeadingValueViewBinding includeProblem,
      IncludeHeadingValueViewBinding includeRepairs,
      IncludeHeadingValueViewBinding includeResolution,
      IncludeHeadingValueViewBinding includeSection) {
    super(_bindingComponent, _root, _localFieldCount);
    this.includeNo = includeNo;
    this.includeProblem = includeProblem;
    this.includeRepairs = includeRepairs;
    this.includeResolution = includeResolution;
    this.includeSection = includeSection;
  }

  public abstract void setData(@Nullable Repair data);

  @Nullable
  public Repair getData() {
    return mData;
  }

  public abstract void setItemCount(@Nullable Integer itemCount);

  @Nullable
  public Integer getItemCount() {
    return mItemCount;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setListeners(@Nullable BaseAdapterListener listeners);

  @Nullable
  public BaseAdapterListener getListeners() {
    return mListeners;
  }

  @NonNull
  public static ItemRepairsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_repairs, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemRepairsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemRepairsBinding>inflateInternal(inflater, R.layout.item_repairs, root, attachToRoot, component);
  }

  @NonNull
  public static ItemRepairsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_repairs, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemRepairsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemRepairsBinding>inflateInternal(inflater, R.layout.item_repairs, null, false, component);
  }

  public static ItemRepairsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemRepairsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemRepairsBinding)bind(component, view, R.layout.item_repairs);
  }
}
