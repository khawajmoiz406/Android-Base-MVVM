// Generated by data binding compiler. Do not edit!
package com.centerpoint.connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.centerpoint.connect.R;
import com.centerpoint.connect.base.listeners.BaseAdapterListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemEstimateMaterialBinding extends ViewDataBinding {
  @NonNull
  public final IncludeHeadingValueViewBinding includeCost;

  @NonNull
  public final IncludeHeadingValueViewBinding includeName;

  @NonNull
  public final IncludeHeadingValueViewBinding includeQuantity;

  @NonNull
  public final IncludeHeadingValueViewBinding includeTaxable;

  @NonNull
  public final IncludeHeadingValueViewBinding includeTotal;

  @NonNull
  public final IncludeHeadingValueViewBinding includeUnits;

  @NonNull
  public final TextView tvLabourHeading;

  @NonNull
  public final TextView tvLabourValue;

  @NonNull
  public final TextView tvMaterialHeading;

  @NonNull
  public final TextView tvMaterialValue;

  @NonNull
  public final TextView tvOtherHeading;

  @NonNull
  public final TextView tvOtherValue;

  @NonNull
  public final TextView tvTotalHeading;

  @NonNull
  public final TextView tvTotalValue;

  @NonNull
  public final View viewTotal;

  @Bindable
  protected Integer mItemCount;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected BaseAdapterListener mListeners;

  protected ItemEstimateMaterialBinding(Object _bindingComponent, View _root, int _localFieldCount,
      IncludeHeadingValueViewBinding includeCost, IncludeHeadingValueViewBinding includeName,
      IncludeHeadingValueViewBinding includeQuantity, IncludeHeadingValueViewBinding includeTaxable,
      IncludeHeadingValueViewBinding includeTotal, IncludeHeadingValueViewBinding includeUnits,
      TextView tvLabourHeading, TextView tvLabourValue, TextView tvMaterialHeading,
      TextView tvMaterialValue, TextView tvOtherHeading, TextView tvOtherValue,
      TextView tvTotalHeading, TextView tvTotalValue, View viewTotal) {
    super(_bindingComponent, _root, _localFieldCount);
    this.includeCost = includeCost;
    this.includeName = includeName;
    this.includeQuantity = includeQuantity;
    this.includeTaxable = includeTaxable;
    this.includeTotal = includeTotal;
    this.includeUnits = includeUnits;
    this.tvLabourHeading = tvLabourHeading;
    this.tvLabourValue = tvLabourValue;
    this.tvMaterialHeading = tvMaterialHeading;
    this.tvMaterialValue = tvMaterialValue;
    this.tvOtherHeading = tvOtherHeading;
    this.tvOtherValue = tvOtherValue;
    this.tvTotalHeading = tvTotalHeading;
    this.tvTotalValue = tvTotalValue;
    this.viewTotal = viewTotal;
  }

  public abstract void setItemCount(@Nullable Integer itemCount);

  @Nullable
  public Integer getItemCount() {
    return mItemCount;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setListeners(@Nullable BaseAdapterListener listeners);

  @Nullable
  public BaseAdapterListener getListeners() {
    return mListeners;
  }

  @NonNull
  public static ItemEstimateMaterialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_estimate_material, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemEstimateMaterialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemEstimateMaterialBinding>inflateInternal(inflater, R.layout.item_estimate_material, root, attachToRoot, component);
  }

  @NonNull
  public static ItemEstimateMaterialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_estimate_material, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemEstimateMaterialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemEstimateMaterialBinding>inflateInternal(inflater, R.layout.item_estimate_material, null, false, component);
  }

  public static ItemEstimateMaterialBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemEstimateMaterialBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemEstimateMaterialBinding)bind(component, view, R.layout.item_estimate_material);
  }
}
