// Generated by data binding compiler. Do not edit!
package com.centerpoint.connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.centerpoint.connect.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class IncludeTicketInfoHeaderBinding extends ViewDataBinding {
  @NonNull
  public final TextView tvOrderIdHeading;

  @NonNull
  public final TextView tvOrderIdValue;

  @NonNull
  public final TextView tvStageHeading;

  @NonNull
  public final TextView tvStageValue;

  @NonNull
  public final View viewBottom;

  @NonNull
  public final View viewTop;

  @Bindable
  protected String mOrderId;

  @Bindable
  protected String mStage;

  protected IncludeTicketInfoHeaderBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView tvOrderIdHeading, TextView tvOrderIdValue,
      TextView tvStageHeading, TextView tvStageValue, View viewBottom, View viewTop) {
    super(_bindingComponent, _root, _localFieldCount);
    this.tvOrderIdHeading = tvOrderIdHeading;
    this.tvOrderIdValue = tvOrderIdValue;
    this.tvStageHeading = tvStageHeading;
    this.tvStageValue = tvStageValue;
    this.viewBottom = viewBottom;
    this.viewTop = viewTop;
  }

  public abstract void setOrderId(@Nullable String orderId);

  @Nullable
  public String getOrderId() {
    return mOrderId;
  }

  public abstract void setStage(@Nullable String stage);

  @Nullable
  public String getStage() {
    return mStage;
  }

  @NonNull
  public static IncludeTicketInfoHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.include_ticket_info_header, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static IncludeTicketInfoHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<IncludeTicketInfoHeaderBinding>inflateInternal(inflater, R.layout.include_ticket_info_header, root, attachToRoot, component);
  }

  @NonNull
  public static IncludeTicketInfoHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.include_ticket_info_header, null, false, component)
   */
  @NonNull
  @Deprecated
  public static IncludeTicketInfoHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<IncludeTicketInfoHeaderBinding>inflateInternal(inflater, R.layout.include_ticket_info_header, null, false, component);
  }

  public static IncludeTicketInfoHeaderBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static IncludeTicketInfoHeaderBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (IncludeTicketInfoHeaderBinding)bind(component, view, R.layout.include_ticket_info_header);
  }
}
