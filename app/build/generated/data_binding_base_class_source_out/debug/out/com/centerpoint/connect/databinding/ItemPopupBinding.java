// Generated by data binding compiler. Do not edit!
package com.centerpoint.connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.centerpoint.connect.R;
import com.centerpoint.connect.base.listeners.BaseAdapterListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemPopupBinding extends ViewDataBinding {
  @NonNull
  public final TextView tvDrawerItem;

  @NonNull
  public final View viewLine;

  @Bindable
  protected String mData;

  @Bindable
  protected Integer mItemCount;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected BaseAdapterListener mListeners;

  protected ItemPopupBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView tvDrawerItem, View viewLine) {
    super(_bindingComponent, _root, _localFieldCount);
    this.tvDrawerItem = tvDrawerItem;
    this.viewLine = viewLine;
  }

  public abstract void setData(@Nullable String data);

  @Nullable
  public String getData() {
    return mData;
  }

  public abstract void setItemCount(@Nullable Integer itemCount);

  @Nullable
  public Integer getItemCount() {
    return mItemCount;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setListeners(@Nullable BaseAdapterListener listeners);

  @Nullable
  public BaseAdapterListener getListeners() {
    return mListeners;
  }

  @NonNull
  public static ItemPopupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_popup, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPopupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPopupBinding>inflateInternal(inflater, R.layout.item_popup, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_popup, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPopupBinding>inflateInternal(inflater, R.layout.item_popup, null, false, component);
  }

  public static ItemPopupBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPopupBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPopupBinding)bind(component, view, R.layout.item_popup);
  }
}
